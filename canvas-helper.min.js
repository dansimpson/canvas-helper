!function(t){function i(t){this.el=t,this.resize(),this.x1=0,this.x2=this.width,this.y1=0,this.y2=this.height}i.prototype={x:function(t){return(t-this.x1)/(this.x2-this.x1)*this.width},y:function(t){return this.height-(t-this.y1)/(this.y2-this.y1)*this.height},h:function(t){return t/(this.y2-this.y1)*this.height},w:function(t){return t/(this.x2-this.x1)*this.width},rx:function(t){return t/this.width*(this.x2-this.x1)+this.x1},ry:function(t){return this.y2-t/this.height*(this.y2-this.y1)},range:function(t,i){this.y1=t,this.y2=i},domain:function(t,i){this.x1=t,this.x2=i},auto:function(t){if(!(t instanceof Array))return void console.warn("auto scale requires array");if(isNaN(t[0])&&t[0]instanceof Array){this.x1=1/0,this.x2=-1/0,this.y1=1/0,this.y2=-1/0;for(var i=0;i<t.length;i++)this.x1=Math.min(this.x1,t[i][0]),this.x2=Math.max(this.x2,t[i][0]),this.y1=Math.min(this.y1,t[i][1]),this.y2=Math.max(this.y2,t[i][1])}else this.domain(0,t.length),this.range(Math.min.apply(Math,t),Math.max.apply(Math,t))},resize:function(){var t=this.el.getBoundingClientRect();this.width=t.width,this.height=t.height}},t.$canvas=function(t,h){var s=new i(h),e=document.createElement("canvas"),n=e.getContext("2d");e.style.position="absolute",e.setAttribute("height",s.height),e.setAttribute("width",s.width),h.appendChild(e),window.addEventListener("resize",function(){s.resize(),e.setAttribute("height",s.height),e.setAttribute("width",s.width),t(n,s)}),t(n,s)}}(window);